@using WebTickets.Helpers;
@model PaginatedList<TicketListViewModel>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Tickets</h2>

<p>
	<a asp-action="Create">Nuevo Ticket</a>
</p>
<div ng-controller="TicketCtrl">
	<div class="row">
		<table>
			<tr>
				<td>
					View <select ng-model="viewby" ng-change="setItemsPerPage(viewby)">
						<option>3</option>
						<option>5</option>
						<option>10</option>
						<option>20</option>
						<option>30</option>
						<option>40</option>
						<option>50</option>
					</select> records at a time.
				</td>
				<td>
					<pagination total-items="totalItems" ng-model="currentPage" ng-change="pageChanged()" class="pagination-sm" items-per-page="itemsPerPage"></pagination>
				</td>
			</tr>
		</table>
	</div>
	<div class="table-responsive">
		<!--Url para usar funcion generica para las listas -->
		<div id="div_url" urlLista="/Tickets/Lista"></div>
		<!---->

		<table class="table table-striped table-sm ">
			<thead class="table-primary">
				 
				<tr>
					<th>
						@Html.DisplayNameFor(model => model[0].Numero_Ticket)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].Prioridad)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].Fecha)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].Username)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].Operador_Nombre_Completo)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].Asignado_A)
					</th>
					<th>
						@Html.DisplayNameFor(model => model[0].EstadoServicio)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>

				<tr ng-repeat="row in datos.slice(((currentPage-1)*itemsPerPage), ((currentPage)*itemsPerPage))">
					<td>
						{{ row.numero_Ticket }}
					</td>
					<td>
						{{ row.prioridad }}
					</td>
					<td>
						{{ row.fecha }}
					</td>
					<td>
						{{ row.username }}
					</td>
					<td>
						{{ row.operador_Nombre_Completo }}
					</td>

					<td>
						{{ row.asignado_A }}
					</td>
					<td>
						{{ row.estadoServicio }}
					</td>
					<td>
						<a asp-action="Edit" asp-route-id="{{ row.id }}">Edit</a> |
						<a asp-action="Details" asp-route-id="{{ row.id }}">Details</a> |
						<a asp-action="Delete" asp-route-id="{{ row.id }}">Delete</a>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
	<div class="row">
		<table>
			<tr>
				<td>
					View <select ng-model="viewby" ng-change="setItemsPerPage(viewby)">
						<option>3</option>
						<option>5</option>
						<option>10</option>
						<option>20</option>
						<option>30</option>
						<option>40</option>
						<option>50</option>
					</select> records at a time.
				</td>
				<td>
					<pagination total-items="totalItems" ng-model="currentPage" ng-change="pageChanged()" class="pagination-sm" items-per-page="itemsPerPage"></pagination>
				</td>
			</tr>
		</table>
	</div>
</div>

<div class="table-responsive">
	<table class="table table-striped table-sm ">
		<thead class="table-primary">
			<tr>
				


				<th>
					@Html.DisplayNameFor(model => model[0].Numero_Ticket)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].Prioridad)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].Fecha)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].Username)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].Operador_Nombre_Completo)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].Asignado_A)
				</th>
				<th>
					@Html.DisplayNameFor(model => model[0].EstadoServicio)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Numero_Ticket)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Prioridad)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Fecha)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Username)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Operador_Nombre_Completo)
					</td>

					<td>
						@Html.DisplayFor(modelItem => item.Asignado_A)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.EstadoServicio)
					</td>
					<td>
						<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
						<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
						<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
	}

	<a asp-action="Index"
	   asp-route-page="@(Model.PageIndex - 1)"
	   class="btn btn-default @prevDisabled">
		Previous
	</a>
	<a asp-action="Index"
	   asp-route-page="@(Model.PageIndex + 1)"
	   class="btn btn-default @nextDisabled">
		Next
	</a>
</div>
<br />

